name: Template Deploy Lambda/SLS

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
      python_version:
        type: string
        default: '3.9'
      yarn:
        type: boolean
        default: false
      black:
        required: false
        type: boolean
        default: true
      autoflake:
        required: false
        type: boolean
        default: true
      mypy:
        required: false
        type: boolean
        default: true
      test:
        required: false
        type: boolean
        default: true


jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.stage }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pipenv'
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: 'npm'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: us-east-1
          role-duration-seconds: 1200
      - name: Install Pip and Pipenv
        run: |
          python -m pip install --upgrade pip==23.1.2 pipenv==2023.5.19
          pipenv sync --dev


      - name: Run Unit Tests
        if: inputs.test
        run: |
          PYTHONPATH=. pipenv run coverage run -m pytest

      - name: Linter (Black)
        if: inputs.black
        run: pipenv run black --check --diff src

      - name: Linter (Autoflake)
        if: inputs.autoflake
        run: pipenv run autoflake -cr src

      - name: Linter (MyPy)
        if: inputs.mypy
        run: pipenv run mypy src


      - name: Install NPM
        if: inputs.yarn == false
        run: |
          npm install --dev
      - name: Install Yarn
        if: inputs.yarn
        run: |
          yarn --dev
      - name: Deploy Layer If needed
        run: |
          pipenv run clubbi_sls_utils_deploy_lambda_layer  ${{ inputs.stage }}
      - name: Deploy to Lambda
        run: |
          npx sls deploy -s ${{ inputs.stage }}
